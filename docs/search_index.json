[["applied-stats-model-ii---hw1-yufan-lin.html", "Chapter 9 Applied Stats Model II - HW1 (Yufan Lin) 9.1 Question 1: 9.2 Question 2", " Chapter 9 Applied Stats Model II - HW1 (Yufan Lin) 9.1 Question 1: \\(1\\) Logistic Regression: Major League Baseball (MLB) maintains a public facing version of it’s “Statcast” system. Since 2015, MLB teams have been leveraging data analytics to gain a competitive advantage using the raw data out of Statcast, which captures extremely high resolution views of player performance. Here we will study a dataset I have pulled and curated. We will examine which of several characteristics are predictive of a hit yielding a “home run.” The selected variables are as follows: • pitch_speed: Speed of pitch in mph. • pitch_spin: Spin rate of pitch • pitch_horizontal_movement: Horizontal movement of the pitch in feet from the catcher’s perspective. • pitch_vertical_movement: Vertical movement of the pitch in feet from the catcher’s perpsective. • plate_x: Horizontal position of the ball when it crosses home plate from the catcher’s perspective. • plate_z: Vertical position of the ball when it crosses home plate from the catcher’s perspective. • pitcher_hand: Pitcher’s throwing hand. • launch_angle: Launch angle of the batted ball. • launch_speed: Exit velocity of the batted ball (so, how fast it is going once hit by the batter) • stand: Side of the plate batter is standing from the pitcher’s perspective. • home_run: 1/0, the target variable The dataset can be loaded with the command HomeRun &lt;- read.csv(“…/HomeRunData.csv”, stringsAsFactors = TRUE) #??? Cannot knit the single document? # Input the dataset HomeRun &lt;- read.csv(&quot;E:/Cloud/OneDrive - University of Missouri/Mizzou_PhD/Class plan/Applied Stats Model II/HW1/HomeRunData.csv&quot;, stringsAsFactors = TRUE) 9.1.1 a. (8 points) Create plots to examine how launch speed and angle may affect the probability of a home run and describe your findings. On the first plot between launch speed and the probability of a home run, as the launch speed increase to 80 and above, the home run chance increases. On the second plot between launch angle and the probability of a home run, as the launch angle increase to be above 10, the chance of home run increases. However, when it surpass 50 the chance of home run decreases. # S39. class is the DV, thickness is the IV. ??? why it doesn&#39;t need binning but deviances needs it? Why is my output different from the ppt? plot(home_run ~ launch_speed,HomeRun) # as the lauch speed increase to 80, the home run chance increase. plot(home_run ~ launch_angle,HomeRun) # seems to have an u-shape effect. less than 0 and more than 50 are both bad. 9.1.2 b. (9 points) Fit a logistic regression model with home_run as the response and all other variables as predictors. Conduct a deviance test to assess if this model is better than the null model. I ran the logistic regression to predict home run using all other variables. The results show the pitch_speed, launch angle and launch speed are statistically significant predictors at 95% confidence level. I then conducted the deviance test. The result is significant. Thus, the model is better than the null model. # Fit model with all variables. Note &lt;- not = Logistic_Model &lt;- glm(home_run ~ ., family = binomial, data = HomeRun) # Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred. ??? What does the warning mean? still can run. move on for now. # https://www.statology.org/glm-fit-fitted-probabilities-numerically-0-or-1-occurred/ summary(Logistic_Model) ## ## Call: ## glm(formula = home_run ~ ., family = binomial, data = HomeRun) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -3.7030 -0.1785 -0.0455 -0.0036 4.2501 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -3.288e+01 1.073e+00 -30.632 &lt; 2e-16 *** ## pitch_speed -5.416e-02 8.723e-03 -6.209 5.32e-10 *** ## pitch_spin 6.729e-05 1.221e-04 0.551 0.581 ## pitch_horizontal_movement -2.779e-02 5.151e-02 -0.539 0.590 ## pitch_vertical_movement -5.401e-02 7.207e-02 -0.749 0.454 ## plate_x -4.299e-02 8.223e-02 -0.523 0.601 ## plate_z 1.040e-01 7.133e-02 1.458 0.145 ## pitcher_handR -6.163e-02 9.391e-02 -0.656 0.512 ## launch_angle 9.850e-02 2.962e-03 33.253 &lt; 2e-16 *** ## launch_speed 3.250e-01 7.796e-03 41.691 &lt; 2e-16 *** ## standR -8.384e-02 7.141e-02 -1.174 0.240 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 10624.6 on 29595 degrees of freedom ## Residual deviance: 6109.7 on 29585 degrees of freedom ## AIC: 6131.7 ## ## Number of Fisher Scoring iterations: 9 # summary(Logistic_Model)$coefficients # S22: change the df per the summary stats above. Test_Dev = summary(Logistic_Model)$null.deviance - summary(Logistic_Model)$deviance 1-pchisq(q = Test_Dev, df = 10) ## [1] 0 #??? What does the 0 stands for here? significant? 9.1.3 c. (8 points) Conduct deviance tests with the drop1() function to assess the significance of each individual variable and report the results. Compare the p-values to those obtained from summary(). I conducted the deviance test using drop1 function. The pitch speed, plate_z, launch_angle, launch_speed and stand are significant at 95% confidence level. The p-value are different from the summary. Plate_z went from 0.145 to 0.001; Stand went 0.240 from to 0.01. All other variables have similar p values as before. I would trust the drop1 function’s results as it doesn’t rely on the unreliable walt’s test. # S30, S67: stepwise selection - backward. large predictors some will randomly be significant. but note, you are not eliminate the one with p at border? once your predictors number is small enough. it is ok? #??? Why no reaction for a long time? drop1(Logistic_Model,test=&quot;F&quot;) ## Single term deletions ## ## Model: ## home_run ~ pitch_speed + pitch_spin + pitch_horizontal_movement + ## pitch_vertical_movement + plate_x + plate_z + pitcher_hand + ## launch_angle + launch_speed + stand ## Df Deviance AIC F value Pr(&gt;F) ## &lt;none&gt; 6109.7 6131.7 ## pitch_speed 1 6147.7 6167.7 183.9705 &lt; 2.2e-16 *** ## pitch_spin 1 6110.0 6130.0 1.4772 0.224219 ## pitch_horizontal_movement 1 6110.0 6130.0 1.4068 0.235594 ## pitch_vertical_movement 1 6110.3 6130.3 2.7214 0.099019 . ## plate_x 1 6110.0 6130.0 1.3233 0.250003 ## plate_z 1 6111.8 6131.8 10.2774 0.001348 ** ## pitcher_hand 1 6110.1 6130.1 2.0781 0.149433 ## launch_angle 1 7716.6 7736.6 7781.3469 &lt; 2.2e-16 *** ## launch_speed 1 10133.9 10153.9 19486.6009 &lt; 2.2e-16 *** ## stand 1 6111.1 6131.1 6.6608 0.009861 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 9.1.4 d. (6 points) Fit a smaller model after removing all variables which are insignificant using α = 0.05. Compare this model to the larger model, are they significantly different? What are the implications of this with regard to model selection? Until the end of this question, use the smaller model for all analysis I compare the smaller model with the larger model, they are not significantly different per the deviance test. The result suggests that larger model doesn’t add much explanation power. I should use the smaller model for parsimonious explanation. Logistic_Model_better &lt;- glm(formula = home_run ~ pitch_speed+ plate_z + launch_angle + launch_speed + stand, family = binomial, data = HomeRun) summary(Logistic_Model_better) ## ## Call: ## glm(formula = home_run ~ pitch_speed + plate_z + launch_angle + ## launch_speed + stand, family = binomial, data = HomeRun) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -3.7028 -0.1792 -0.0455 -0.0036 4.2511 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -32.484157 0.935687 -34.717 &lt;2e-16 *** ## pitch_speed -0.057392 0.006136 -9.354 &lt;2e-16 *** ## plate_z 0.096252 0.070659 1.362 0.173 ## launch_angle 0.098273 0.002941 33.420 &lt;2e-16 *** ## launch_speed 0.324831 0.007788 41.711 &lt;2e-16 *** ## standR -0.088306 0.069221 -1.276 0.202 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 10624.6 on 29595 degrees of freedom ## Residual deviance: 6111.3 on 29590 degrees of freedom ## AIC: 6123.3 ## ## Number of Fisher Scoring iterations: 9 #??? Is sthe plate_Z and standR just noise? random significant on the backward selection drop1 process? # Note the df difference 11 (baseline all variable) - 5 (better model) = 6 Test_Dev_better = summary(Logistic_Model_better)$deviance - summary(Logistic_Model)$deviance 1-pchisq(q = Test_Dev_better, df = 6) ## [1] 0.9502016 # The result shows insignificant difference between the two. Thus, better model is parsimony. 9.1.5 e. (7 points) How does the launch speed after the ball is hit affect the odds of HomeRun occurring? Provide a confidence interval for this value. The odds is 1.38. As the launch speed increase by 1, the chance of success will increase by 100% * (1.38-1) = 38% The confidence interval for the odds is between 1.36 to 1.40. # S57/ Coef_LogOdds &lt;- coefficients(Logistic_Model_better) Coef_LogOdds |&gt; exp() ## (Intercept) pitch_speed plate_z launch_angle launch_speed standR ## 7.803867e-15 9.442236e-01 1.101037e+00 1.103264e+00 1.383797e+00 9.154811e-01 #1.383797e+00 ??? interpret e+00 menas integer? 1.38 more success than failure to hit home rum #S17: When launch speed increases by 1, the odds of success increases by a factor of 1.38 pr 100% * (1.38-1) = 38% increase in chance/ odds??? of sucess. #What if I want the chance vs. odds??? # why the number different? 1.38/(1+1.38) = .57 # type of confidenec interval #??? What if I use directly the CI from the model? violate assumption in binomial family? # A lot of warning message: Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred ??? #S44: #Confidence_Intervals &lt;- confint(Logistic_Model_better) #Confidence_Intervals Confidence_Intervals &lt;- confint(Logistic_Model_better) ## Waiting for profiling to be done... Confidence_Intervals |&gt; exp() ## 2.5 % 97.5 % ## (Intercept) 1.218007e-15 4.773109e-14 ## pitch_speed 9.329500e-01 9.556669e-01 ## plate_z 9.584535e-01 1.264379e+00 ## launch_angle 1.096995e+00 1.109715e+00 ## launch_speed 1.363138e+00 1.405399e+00 ## standR 7.995274e-01 1.048816e+00 9.1.6 f. (5 points) Using the deviance residuals, make a binned residual vs fitted probability plot and comment on the fit of the model. The model doesn’t fit well. The residual gets bigger rather than smaller when the probability increases. Based on the theoretical distribution, as the probability increases, the variance should be smaller. Thus, there may be misspecification in the model. # bin plot vs. fitted plt # random subset is not required. library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✔ ggplot2 3.3.6 ✔ purrr 0.3.4 ## ✔ tibble 3.1.7 ✔ dplyr 1.0.8 ## ✔ tidyr 1.2.0 ✔ stringr 1.4.0 ## ✔ readr 2.1.2 ✔ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() plot_bin &lt;- function(Y, X, bins = 100, return.DF = FALSE){ Y_Name &lt;- deparse(substitute(Y)) X_Name &lt;- deparse(substitute(X)) Binned_Plot &lt;- data.frame(Plot_Y = Y, Plot_X = X) Binned_Plot$bin &lt;- cut(Binned_Plot$Plot_X,breaks = bins) |&gt; as.numeric() Binned_Plot_summary &lt;- Binned_Plot |&gt; group_by(bin) |&gt; summarise(Y_ave = mean(Plot_Y), X_ave = mean(Plot_X), Count = n()) |&gt; as.data.frame() plot(y = Binned_Plot_summary$Y_ave, x = Binned_Plot_summary$X_ave, ylab = Y_Name,xlab = X_Name) if(return.DF) return(Binned_Plot_summary) } #S32: vs. fitted probability plot rather than individual variable. ??? When to use the individual variable on? Logistic_better_Resids &lt;- residuals(Logistic_Model_better,type=&quot;response&quot;) Logistic_better_Predictions &lt;- predict(Logistic_Model_better,type = &quot;response&quot;) NumBins &lt;- 200 Binned_Data &lt;- plot_bin(Y = Logistic_better_Resids, X = Logistic_better_Predictions, bins = NumBins, return.DF = TRUE) abline(0,1,lty=2) # The model doesn&#39;t fit well??? why? #S28 ??? why deviance not the same. why no u shape. np vs. npq. #need more bins, the shape will follow theroy on S18 Chapter 2. 9.1.7 g. (4 points) Using a probability of 0.5 as the threshold for predicting an observation yielding a home run, create a table classifying the predictions against the observed values. Describe your findings. What is the misclassification rate? The model predicts well as the accuracy rate is high. The misclassification rate is 0.043 or 4%. However, the sensitivity and specificity are poor. # confusion matrix # S47: Predicted_Prob &lt;- predict(Logistic_Model_better, type=&quot;response&quot;) Predicted_Class &lt;- ifelse(Predicted_Prob &gt; 0.5,yes = &quot;home_run&quot;,no = &quot;no_home_run&quot;) Observed_Class &lt;- HomeRun$home_run table(Observed_Class,Predicted_Class) ## Predicted_Class ## Observed_Class home_run no_home_run ## 0 190 28113 ## 1 274 1019 # Misclassification rate: table_classify = table(Observed_Class,Predicted_Class) Accuracy_rate = (table_classify[2,1]+table_classify[1,2])/(table_classify[1,1]+table_classify[1,2]+table_classify[2,1]+table_classify[2,2]) 1-Accuracy_rate ## [1] 0.04085011 9.1.8 h. (6 points) Using probability thresholds from 0.005 to 0.995, obtain the sensitivities and specificity of the resulting predictions. Create an ROC plot and comment on the effectiveness of the model’s ability to correctly classify the response. As we vary the threshold to determine classifications, is inverse relationship between sensitivity and specificity strongly evident? The inverse relationship is strongly evident as the threshold increases. # Create ROC curve #S48: thresh &lt;- seq(0.005,0.995,0.001) Sensitivity &lt;- numeric(length(thresh)) Specificity &lt;- numeric(length(thresh)) for(j in seq(along=thresh)){ Predicted_Class &lt;- ifelse(Predicted_Prob &gt; thresh[j], yes = &quot;1_home_run&quot;,no = &quot;0_no_home_run&quot;) Conf_Matrix &lt;- table(Observed_Class,Predicted_Class) # Specificity[j] &lt;- Conf_Matrix[1,1]/(Conf_Matrix[1,1]+Conf_Matrix[1,2]) # Sensitivity[j] &lt;- Conf_Matrix[2,2]/(Conf_Matrix[2,1]+Conf_Matrix[2,2]) } plot(1-Specificity,Sensitivity,type=&quot;l&quot;,main = &quot;ROC curve&quot;, xlim = c(0,1),ylim = c(0,1)) abline(0,1,lty=2) 9.1.9 i. (5 points) Produce a plot of the sensitivity and specificity against the threshold. Is there a threshold for classification you would recommend that provides a good balance between the two? Make another confusion matrix using this cutoff, how does the result compare to the previous one? Consider the types of errors you observe. The optimal threshold is 0.05. The result is better than 0.5 as the cut-off: The accuracy is worse but sensitivity and specificity are higher or more discriminant. The accuracy rate is not a good indicator of model performance when the outcomes is rare such as home run. #! The result is better than 0.5 as the cut-off The accuracy is worse but senstivity and specificity is higher #S50 matplot(thresh,cbind(Sensitivity,Specificity),type=&quot;l&quot;, xlab=&quot;Threshold&quot;,ylab=&quot;Proportion&quot;,lty=1:2) # abline, v = cutoff. 9.1.10 Rewrie the answer # confusion matrix # when we lower the threshold, more on the home run category. if choose 0.5, for the rare. # S47: Predicted_Prob &lt;- predict(Logistic_Model_better, type=&quot;response&quot;) Predicted_Class &lt;- ifelse(Predicted_Prob &gt; 0.05,yes = &quot;home_run&quot;,no = &quot;no_home_run&quot;) Observed_Class &lt;- HomeRun$home_run table(Observed_Class,Predicted_Class) ## Predicted_Class ## Observed_Class home_run no_home_run ## 0 4222 24081 ## 1 1182 111 # Misclassification rate: table_classify = table(Observed_Class,Predicted_Class) Accuracy_rate = (table_classify[2,1]+table_classify[1,2])/(table_classify[1,1]+table_classify[1,2]+table_classify[2,1]+table_classify[2,2]) 1-Accuracy_rate ## [1] 0.1464049 9.1.11 j. (3 points) Consider a logistic model with only launch_angle and launch_speed being used to predict the probability of a home run. What is the AIC of this model? The AIC of the model is 6203. # Produce AIC Logistic_Model_reduced &lt;- glm(formula = home_run ~ launch_angle + launch_speed, family = binomial, data = HomeRun) summary(Logistic_Model_reduced) ## ## Call: ## glm(formula = home_run ~ launch_angle + launch_speed, family = binomial, ## data = HomeRun) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -3.7202 -0.1812 -0.0479 -0.0038 4.2110 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -36.664943 0.835606 -43.88 &lt;2e-16 *** ## launch_angle 0.097468 0.002849 34.22 &lt;2e-16 *** ## launch_speed 0.317479 0.007616 41.69 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 10624.6 on 29595 degrees of freedom ## Residual deviance: 6197.6 on 29593 degrees of freedom ## AIC: 6203.6 ## ## Number of Fisher Scoring iterations: 9 9.1.12 k. (11 points) Create a dummy variable which is 1 if launch_angle is between 20 and 40 degrees and use this variable in your model instead of the raw value for launch_angle. Then, complete the following: 1. Compare the AIC of this model to the model in part j, which model is better? 2. What does the coefficient of your dummy variable mean? Interpret the value. 3. Interpret the value of the intercept by converting to a probability. Does this result make sense? The model with dummy’s AIC is 4508 which is much smaller than the 6203. The dummy variable means when the launch_angle is between 20 and 40 degree the odds of success is higher than the launch_angle outside the window. Thus, there is a optimal point of the launch angle. The intercept is very small or 4.186275e-17 which means the chance of making a home run when all other variables are set to 0 is very small. # compare with other temp, here is more likely. HomeRun$launch_angle_d &lt;- ifelse(HomeRun$launch_angle &gt;= 20 &amp; HomeRun$launch_angle &lt;= 40 ,1,0) # Produce AIC Logistic_Model_reduced_d &lt;- glm(formula = home_run ~ launch_angle_d + launch_speed, family = binomial, data = HomeRun) summary(Logistic_Model_reduced) ## ## Call: ## glm(formula = home_run ~ launch_angle + launch_speed, family = binomial, ## data = HomeRun) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -3.7202 -0.1812 -0.0479 -0.0038 4.2110 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -36.664943 0.835606 -43.88 &lt;2e-16 *** ## launch_angle 0.097468 0.002849 34.22 &lt;2e-16 *** ## launch_speed 0.317479 0.007616 41.69 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 10624.6 on 29595 degrees of freedom ## Residual deviance: 6197.6 on 29593 degrees of freedom ## AIC: 6203.6 ## ## Number of Fisher Scoring iterations: 9 summary(Logistic_Model_reduced_d) ## ## Call: ## glm(formula = home_run ~ launch_angle_d + launch_speed, family = binomial, ## data = HomeRun) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.1862 -0.0780 -0.0148 -0.0025 3.9332 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -37.712135 0.991093 -38.05 &lt;2e-16 *** ## launch_angle_d 5.329550 0.156367 34.08 &lt;2e-16 *** ## launch_speed 0.313245 0.009108 34.39 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 10624.6 on 29595 degrees of freedom ## Residual deviance: 4502.2 on 29593 degrees of freedom ## AIC: 4508.2 ## ## Number of Fisher Scoring iterations: 9 Coef_LogOdds_d &lt;- coefficients(Logistic_Model_reduced_d) Coef_LogOdds_d |&gt; exp() ## (Intercept) launch_angle_d launch_speed ## 4.186275e-17 2.063451e+02 1.367857e+00 # convert intercept to probability odds/ (1+odds) (4.186275e-17)/(1-4.186275e-17) ## [1] 4.186275e-17 9.2 Question 2 2) Ordinal Regression The DrugConsumption.csv file on Canvas contains records for 1458 respondents. For each respondent 12 attributes are known: Personality measurements which include NEO-FFI-R (neuroticism, extraversion, openness to experience, agreeableness, and conscientiousness), BIS-11 (impulsivity), and ImpSS (sensation seeking), level of education, age, gender and country of residence. In addition, participants were questioned concerning their use of 18 legal and illegal drugs, of which only LSD is included for our study. The variables are as follows: • LSD: Target variable, ordinal with levels CL0-CL5, which correspond to “Never Used”, “Used over a Decade Ago”, “Used in Last Decade”, “Used in Last Year”, “Used in Last Month”, “Used in Last Week”. • Age: Categorical age • Gender: Gender • Education: Categorical Educational level • Country: UK or USA • Nscore: NEO-FFI-R, a psychological measure of Neuroticism • Escore: NEO-FFI-R Extraversion. • Oscore: NEO-FFI-R Openness to experience • Ascore: NEO-FFI-R Agreeableness • Cscore: NEO-FFI-R Conscientiousness • Impulsive: Impulsiveness score measured by BIS-11 • SS: Impulsive Sensation Seeking measured by ImpSS You may read the data as follows: Drugs &lt;- read.csv(“…/DrugConsumption.csv”, stringsAsFactors = TRUE) Drugs$LSD &lt;- ordered(Drugs$LSD,levels = c(paste0(“CL”,0:5))) Drugs &lt;- read.csv(&quot;E:/Cloud/OneDrive - University of Missouri/Mizzou_PhD/Class plan/Applied Stats Model II/HW1/DrugConsumption.csv&quot;, stringsAsFactors = TRUE) #install.packages(&quot;tidyverse&quot;) library(tidyverse) # for mutate function #??? the following code gave me error. What is it? #Drugs$LSD &lt;- ordered(Drugs$LSD,levels = c(paste0(&quot;CL&quot;,0:5))) 9.2.1 a. (5 points) Make a plot or set of tables showing the distribution of LSD use between genders and interpret. You can use code similar to that on slide 84 of the course notes. I re-coded the categories into descriptive names “Used over a Decade Ago”, “Used in Last Decade”, “Used in Last Year”, “Used in Last Month”, “Used in Last Week”. Based on the plot, male are more likely to use drugs than female. Many female never used any drugs. Drugs$LSD_o &lt;- NA Drugs$LSD_o[Drugs$LSD %in%c(&quot;CL0&quot;)] &lt;- &quot;Never Used&quot; Drugs$LSD_o[Drugs$LSD %in%c(&quot;CL1&quot;)] &lt;- &quot;Used over a Decade Ago&quot; Drugs$LSD_o[Drugs$LSD %in%c(&quot;CL2&quot;)] &lt;- &quot;Used in Last Decade&quot; Drugs$LSD_o[Drugs$LSD %in%c(&quot;CL3&quot;)] &lt;- &quot;Used in Last Year&quot; Drugs$LSD_o[Drugs$LSD %in%c(&quot;CL4&quot;)] &lt;- &quot;Used in Last Month&quot; Drugs$LSD_o[Drugs$LSD %in%c(&quot;CL5&quot;)] &lt;- &quot;Used in Last Week&quot; table(Drugs$LSD_o) ## ## Never Used Used in Last Decade Used in Last Month ## 866 134 62 ## Used in Last Week Used in Last Year Used over a Decade Ago ## 40 146 210 Plot_DF &lt;- Drugs |&gt; group_by(Gender, LSD_o) |&gt; summarise(count=n()) |&gt; group_by(Gender) |&gt; mutate(etotal=sum(count), proportion=count/etotal) ## `summarise()` has grouped output by &#39;Gender&#39;. You can override using the ## `.groups` argument. # mutate(Age_Grp=cut_number(age,4)) |&gt; not used since the gender is not continous. # Plot_DF -&gt; only a dataframe Gender_Plot &lt;- ggplot(Plot_DF, aes(x=Gender, y=proportion, group=LSD_o, linetype=LSD_o))+ geom_line() Gender_Plot 9.2.2 b. (9 points) Fit a proportional odds model using LSD as the response variable and the other variables listed above as predictors. Using drop1(), test if the variables are significant or insignificant and describe 2 your results. The significant variables are age 55+, GenderMale, CountryUSA, Oscore and Cscore. The drop1 function shows gender, country, Oscore and Cscore are significant but not the age 55+. Strangely the drop1 function doesn’t factorize the categorical variables such as age and education. Overall, the two results are quite consistent with each other. library(MASS) ## ## Attaching package: &#39;MASS&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## select Drugs$LSD_o &lt;- ordered(Drugs$LSD_o, levels=c(&quot;Never Used&quot;, &quot;Used over a Decade Ago&quot;, &quot;Used in Last Decade&quot;, &quot;Used in Last Year&quot;, &quot;Used in Last Month&quot;, &quot;Used in Last Week&quot;)) PropOdds_Model &lt;- MASS::polr(LSD_o ~ Age + Gender + Education + Country + Nscore + Escore + Oscore + Ascore + Cscore, Drugs) summary(PropOdds_Model) ## ## Re-fitting to get Hessian ## Call: ## MASS::polr(formula = LSD_o ~ Age + Gender + Education + Country + ## Nscore + Escore + Oscore + Ascore + Cscore, data = Drugs) ## ## Coefficients: ## Value Std. Error t value ## Age25-34 -0.097001 0.16037 -0.60486 ## Age35-44 -0.006247 0.17504 -0.03569 ## Age45-54 -0.218738 0.18630 -1.17412 ## Age55+ -0.671385 0.26083 -2.57408 ## GenderMale 0.773020 0.12094 6.39159 ## EducationHighSchool -0.105167 0.29551 -0.35588 ## EducationHSDropout 0.124446 0.22553 0.55180 ## EducationPostGraduate -0.294833 0.17637 -1.67163 ## EducationProfessionalCert 0.011469 0.19528 0.05873 ## EducationSomeCollege 0.078480 0.16218 0.48392 ## CountryUSA 1.708138 0.13773 12.40252 ## Nscore -0.110185 0.06866 -1.60469 ## Escore 0.014487 0.06745 0.21478 ## Oscore 0.597784 0.06685 8.94237 ## Ascore -0.018913 0.05870 -0.32221 ## Cscore -0.178554 0.06696 -2.66662 ## ## Intercepts: ## Value Std. Error t value ## Never Used|Used over a Decade Ago 1.2133 0.1750 6.9337 ## Used over a Decade Ago|Used in Last Decade 2.1296 0.1832 11.6275 ## Used in Last Decade|Used in Last Year 2.9048 0.1887 15.3969 ## Used in Last Year|Used in Last Month 4.1597 0.2054 20.2562 ## Used in Last Month|Used in Last Week 5.2439 0.2415 21.7105 ## ## Residual Deviance: 3143.917 ## AIC: 3185.917 #problen with converge if I include the same variable LSD. need to remove it. drop1(PropOdds_Model,test=&quot;Chisq&quot;) ## Single term deletions ## ## Model: ## LSD_o ~ Age + Gender + Education + Country + Nscore + Escore + ## Oscore + Ascore + Cscore ## Df AIC LRT Pr(&gt;Chi) ## &lt;none&gt; 3185.9 ## Age 4 3186.2 8.270 0.082171 . ## Gender 1 3225.3 41.410 1.234e-10 *** ## Education 5 3181.0 5.122 0.401142 ## Country 1 3343.6 159.732 &lt; 2.2e-16 *** ## Nscore 1 3186.5 2.573 0.108671 ## Escore 1 3184.0 0.046 0.829943 ## Oscore 1 3266.8 82.918 &lt; 2.2e-16 *** ## Ascore 1 3184.0 0.104 0.747364 ## Cscore 1 3191.1 7.183 0.007359 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # drop1(PropOdds_Model) # why is the age not broken down as factors? # Drop1 will drop all in age variable. 9.2.3 c. (6 points) Interpret the values of the intercepts θj . The intercepts are listed as below: Never Used|Used over a Decade Ago 3.364569 . It means cumulative odds of being never used is 3.36 when all other variables are set to 0. Used over a Decade Ago|Used in Last Decade 8.411502 It means cumulative odds of being Used in last decade is 8.411502 when all other variables are set to 0. Used in Last Decade|Used in Last Year 18.26159 It means cumulative odds of being Used in last year is 18.2615 when all other variables are set to 0. Used in Last Year|Used in Last Month 64.0523 It means cumulative odds of being Used in last month is 64.0523 when all other variables are set to 0. Used in Last Month|Used in Last Week 189.4074 It means cumulative odds of being Used in last week is 189 when all other variables are set to 0. PropOdds_Model_sum &lt;- summary(PropOdds_Model) ## ## Re-fitting to get Hessian #PropOdds_Model_sum$coefficients exp(1.2133) ## [1] 3.364569 exp(2.1296) ## [1] 8.411502 exp(2.9048) ## [1] 18.26159 exp(4.1597) ## [1] 64.0523 exp(5.2439) ## [1] 189.4074 #!not sure how to explain it. S97. Does it also needs a exp()? -&gt; how to extract it automatically? does it mean % of ppl??? 9.2.4 d. (10 points) Print the coefficient table and interpret the values of the significant personality characteristics. The open to experience increase the odds of using the drugs by 1.81. Conscientiousness decreases the odds of using the drugs by 0.8. coefficients(PropOdds_Model) ## Age25-34 Age35-44 Age45-54 ## -0.097000990 -0.006246867 -0.218738114 ## Age55+ GenderMale EducationHighSchool ## -0.671384707 0.773019582 -0.105166700 ## EducationHSDropout EducationPostGraduate EducationProfessionalCert ## 0.124446396 -0.294833364 0.011469188 ## EducationSomeCollege CountryUSA Nscore ## 0.078480163 1.708138461 -0.110184787 ## Escore Oscore Ascore ## 0.014486532 0.597783608 -0.018912601 ## Cscore ## -0.178553588 #??? are the coefficient intercept or beta? #Both personality significant. The higher the less likely to move ?!!! #Oscore exp(0.597784) ## [1] 1.818085 #Cscore exp(-0.178554) ## [1] 0.8364789 9.2.5 e. (7250 only) (6 points) Explore interacting some of the categorical demographic variables with the personality measurements and report your findings, does the nature of any personality characteristics affect on LSD usage change according to your analysis? I tested the interaction between demographic variables (age, gender and education) and personality measurements (Oscore, Cscore). I found the following significant interactions: Age35-44:Oscore -0.396513 Age25-34:Cscore -0.368074 Age35-44:Cscore -0.590439 Age45-54:Cscore -0.587787 Age55+:Cscore -0.614652 The results have a consistent theme that more mature people (age above 18-24) and higher on open to experience or conscientiousness scores are less likely to use drugs. PropOdds_Model_int &lt;- MASS::polr(LSD_o ~ Age + Gender + Education + Country + Nscore + Escore + Oscore + Ascore + Cscore + Age*Oscore + Age*Cscore + Gender*Oscore + Gender*Cscore + Education*Oscore + Education *Cscore, Drugs) summary(PropOdds_Model_int) ## ## Re-fitting to get Hessian ## Call: ## MASS::polr(formula = LSD_o ~ Age + Gender + Education + Country + ## Nscore + Escore + Oscore + Ascore + Cscore + Age * Oscore + ## Age * Cscore + Gender * Oscore + Gender * Cscore + Education * ## Oscore + Education * Cscore, data = Drugs) ## ## Coefficients: ## Value Std. Error t value ## Age25-34 -0.172081 0.17273 -0.99623 ## Age35-44 -0.104423 0.18315 -0.57016 ## Age45-54 -0.280105 0.19515 -1.43533 ## Age55+ -0.654289 0.26780 -2.44318 ## GenderMale 0.774285 0.12648 6.12198 ## EducationHighSchool 0.019760 0.32261 0.06125 ## EducationHSDropout -0.102915 0.24983 -0.41194 ## EducationPostGraduate -0.306062 0.19143 -1.59878 ## EducationProfessionalCert 0.046031 0.20393 0.22572 ## EducationSomeCollege 0.070706 0.17446 0.40528 ## CountryUSA 1.744167 0.14162 12.31579 ## Nscore -0.118884 0.06971 -1.70541 ## Escore 0.038420 0.06843 0.56143 ## Oscore 0.685866 0.17126 4.00483 ## Ascore -0.018826 0.06047 -0.31131 ## Cscore 0.116770 0.16389 0.71247 ## Age25-34:Oscore 0.004876 0.17067 0.02857 ## Age35-44:Oscore -0.396513 0.17969 -2.20666 ## Age45-54:Oscore -0.143649 0.21006 -0.68386 ## Age55+:Oscore -0.227344 0.27432 -0.82876 ## Age25-34:Cscore -0.368074 0.16557 -2.22312 ## Age35-44:Cscore -0.590439 0.17650 -3.34527 ## Age45-54:Cscore -0.587787 0.19676 -2.98727 ## Age55+:Cscore -0.614652 0.29484 -2.08467 ## GenderMale:Oscore 0.009991 0.12113 0.08248 ## GenderMale:Cscore -0.052592 0.12510 -0.42040 ## EducationHighSchool:Oscore -0.293782 0.27753 -1.05855 ## EducationHSDropout:Oscore -0.255640 0.25420 -1.00565 ## EducationPostGraduate:Oscore 0.058642 0.19749 0.29693 ## EducationProfessionalCert:Oscore 0.303077 0.21251 1.42618 ## EducationSomeCollege:Oscore 0.012843 0.16599 0.07737 ## EducationHighSchool:Cscore 0.056019 0.32688 0.17138 ## EducationHSDropout:Cscore -0.226221 0.24937 -0.90717 ## EducationPostGraduate:Cscore 0.254668 0.19192 1.32694 ## EducationProfessionalCert:Cscore 0.101606 0.21581 0.47082 ## EducationSomeCollege:Cscore 0.026077 0.16748 0.15571 ## ## Intercepts: ## Value Std. Error t value ## Never Used|Used over a Decade Ago 1.1821 0.1815 6.5142 ## Used over a Decade Ago|Used in Last Decade 2.1166 0.1893 11.1805 ## Used in Last Decade|Used in Last Year 2.9087 0.1952 14.9009 ## Used in Last Year|Used in Last Month 4.1936 0.2136 19.6321 ## Used in Last Month|Used in Last Week 5.2923 0.2499 21.1740 ## ## Residual Deviance: 3108.449 ## AIC: 3190.449 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
